class CoffeeMaker {
  init(coffee) {
    this.coffee = coffee;
  }

  brew() {
    print "Enjoy your cup of " + this.coffee;

    // No reusing the grounds!
    this.coffee = nil;
  }
}

var maker = CoffeeMaker("coffee and chicory");
maker.brew();



class Breakfast {
    say() {
      print this.name;
    }
}

var eggs = Breakfast();
eggs.name = "benedict";
eggs.say();


class Scone {
  topping(first, second) {
    print "scone with " + first + " and " + second;
  }
}
var scone = Scone();
scone.topping("berries", "cream");


class Brunch {
  eggs() {}
}
var brunch = Brunch();
var eggs = brunch.eggs;




class Brunch {
  bacon() {}
  eggs() {}
}






class Pair {}

var myPair = Pair();
myPair.first = 1;
myPair.second = 2;
print myPair.first + myPair.second;


fun outer() {
  var x = "outside";
  fun inner() {
    print x;
  }
  inner();
}
outer();



fun test(a, b) {
  print b;
  print a;
  print b + a;
}
test(5, 10);


{
  var a = 5;
  var b = 10;
  print b + a;
}

class Dog {
  bark() {
    print "woof";
  }
}

class Doberman < Dog {
  init(name) {
    this.name = name;
  }
  say() {
    print this.name;
  }
  bark() {
    super.bark();
    print "Doberman Woof!";
  }
}

var d = Doberman("Rex");
d.say();
d.bark();





// Global variables
var globalMessage = "Hello from global!";
var counter = 0;

// Function with locals and a closure
fun makeCounter() {
    var start = 10;  // Local in makeCounter
    fun count() {
        start = start + 1;  // Closure captures start
        counter = counter + 1;  // Modifies global
        return start;
    }
    return count;
}

// Class with fields, methods, and inheritance
class Person {
    init(name) {
        this.name = name;  // Instance field (string)
    }

    greet() {
        print "Hi, Iâ€™m " + this.name + "!";
    }
}

class Student < Person {
    init(name, id) {
        super.init(name);  // Call superclass init
        this.id = id;      // Additional field
    }

    greet() {
        super.greet();  // Call superclass method
        print "Student ID: " + this.id + ".";
    }
}

// Main execution
var student = Student("Alice", "12345");  // Create instance
student.greet();  // Call method

var myCounter = makeCounter();  // Get closure
print "Counter: " + myCounter();  // Use closure
print "Global counter: " + counter;  // Check global

print globalMessage;  // Access global string